/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.client;

import dao.ReservationDAO;
import models.Reservation;
import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;

/**
 *
 * @author diaom
 */
public class ReservationFrom extends javax.swing.JFrame {

    private Integer clientId;
    private Reservation reservationToEdit = null;
    private Integer chambreIdSelectionnee = null;

    /**
     * Creates new form ReservationFrom
     */
    public ReservationFrom(Integer clientId, Reservation reservation, Integer chambreId) {
        this(clientId, reservation);
        this.chambreIdSelectionnee = chambreId;
        // Optionnel : afficher la chambre sélectionnée dans le formulaire
    }

    public ReservationFrom(Integer clientId, Reservation reservation) {
        this.clientId = clientId;
        this.reservationToEdit = reservation;
        initComponents();
        btnValider.addActionListener(e -> validerReservation());
        // Pré-remplir les champs si édition
        if (reservation != null) {
            txtDateDebut.setText(reservation.getDateCheckin() != null ? reservation.getDateCheckin().toString() : "");
            txtDateFin.setText(reservation.getDateCheckout() != null ? reservation.getDateCheckout().toString() : "");
            txtNombreAdultes.setText(String.valueOf(reservation.getNombreAdultes()));
            txtNombreEnfants.setText(String.valueOf(reservation.getNombreEnfants()));
            txtAcompte.setText(reservation.getAcompte() != null ? reservation.getAcompte().toString() : "");
            txtCommentaires.setText(reservation.getCommentaires() != null ? reservation.getCommentaires() : "");
        }
    }

    public ReservationFrom() {
        this(-1, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDateDebut = new javax.swing.JTextField();
        txtNombreAdultes = new javax.swing.JTextField();
        txtNombreEnfants = new javax.swing.JTextField();
        txtCommentaires = new javax.swing.JTextField();
        txtDateFin = new javax.swing.JTextField();
        txtAcompte = new javax.swing.JTextField();
        btnValider = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Date de début");

        jLabel2.setText("Date de début");

        jLabel3.setText("Nombre d'adultes");

        jLabel4.setText("Nombre d'enfants");

        jLabel5.setText("Acompte");

        jLabel6.setText("Commentaires");

        btnValider.setText("Valider");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel3)
                                .addComponent(jLabel1))
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtDateDebut, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCommentaires, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDateFin, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreEnfants, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreAdultes, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAcompte, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(165, 165, 165)
                        .addComponent(btnValider)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDateDebut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtDateFin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNombreAdultes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombreEnfants, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtAcompte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addComponent(jLabel6))
                    .addComponent(txtCommentaires, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(btnValider)
                .addGap(38, 38, 38))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReservationFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReservationFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReservationFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReservationFrom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReservationFrom().setVisible(true);
            }
        });
    }

    private void validerReservation() {
        try {
            String dateDebutStr = txtDateDebut.getText().trim();
            String dateFinStr = txtDateFin.getText().trim();
            String nbAdultesStr = txtNombreAdultes.getText().trim();
            String nbEnfantsStr = txtNombreEnfants.getText().trim();
            String acompteStr = txtAcompte.getText().trim();
            String commentaires = txtCommentaires.getText().trim();

            if (dateDebutStr.isEmpty() || dateFinStr.isEmpty() || nbAdultesStr.isEmpty() || nbEnfantsStr.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs obligatoires.");
                return;
            }

            LocalDate dateDebut = LocalDate.parse(dateDebutStr);
            LocalDate dateFin = LocalDate.parse(dateFinStr);
            LocalDate today = LocalDate.now();
            if (dateDebut.isBefore(today)) {
                javax.swing.JOptionPane.showMessageDialog(this, "La date de début doit être aujourd'hui ou après.");
                return;
            }
            if (dateDebut.isAfter(today.plusYears(2))) {
                javax.swing.JOptionPane.showMessageDialog(this, "La date de début ne peut pas être à plus de 2 ans dans le futur.");
                return;
            }
            if (!dateFin.isAfter(dateDebut)) {
                javax.swing.JOptionPane.showMessageDialog(this, "La date de fin doit être après la date de début.");
                return;
            }

            int nbAdultes = Integer.parseInt(nbAdultesStr);
            int nbEnfants = Integer.parseInt(nbEnfantsStr);
            BigDecimal acompte = acompteStr.isEmpty() ? BigDecimal.ZERO : new BigDecimal(acompteStr);

            Reservation reservation;
            boolean isEdition = (reservationToEdit != null);
            if (isEdition) {
                reservation = reservationToEdit;
            } else {
                reservation = new Reservation();
                reservation.setClientId(clientId);
                reservation.setCreatedAt(LocalDateTime.now());
            }
            reservation.setDateCheckin(dateDebut);
            reservation.setDateCheckout(dateFin);
            reservation.setNombreAdultes(nbAdultes);
            reservation.setNombreEnfants(nbEnfants);
            reservation.setAcompte(acompte);
            reservation.setCommentaires(commentaires);
            reservation.setUpdatedAt(LocalDateTime.now());

            // Ajout automatique de la chambre sélectionnée si réservation depuis l'onglet chambre
            if (!isEdition && chambreIdSelectionnee != null) {
                models.ReservationChambre rc = new models.ReservationChambre();
                rc.setChambreId(chambreIdSelectionnee);
                rc.setCreatedAt(LocalDateTime.now());
                // Récupère le prix de la chambre
                models.Chambre chambre = dao.ChambreDAO.findById(chambreIdSelectionnee);
                if (chambre != null) {
                    models.TypeChambre type = dao.TypeChambreDAO.findById(chambre.getTypeChambreId());
                    if (type != null) rc.setPrixNuit(type.getPrixBase());
                }
                reservation.getChambres().add(rc);
            }

            if (isEdition) {
                dao.ReservationDAO.update(reservation);
                javax.swing.JOptionPane.showMessageDialog(this, "Réservation modifiée avec succès !");
            } else {
                dao.ReservationDAO.insert(reservation);
                javax.swing.JOptionPane.showMessageDialog(this, "Réservation ajoutée avec succès !");
            }
            this.dispose();
        } catch (Exception e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Erreur lors de l'enregistrement de la réservation : " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnValider;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtAcompte;
    private javax.swing.JTextField txtCommentaires;
    private javax.swing.JTextField txtDateDebut;
    private javax.swing.JTextField txtDateFin;
    private javax.swing.JTextField txtNombreAdultes;
    private javax.swing.JTextField txtNombreEnfants;
    // End of variables declaration//GEN-END:variables
}
